import { ModuleWithProviders } from '@angular/core';
import { ComponentPool } from './component.pool';
import * as i0 from "@angular/core";
import * as i1 from "./append.pipe";
import * as i2 from "./conditional.pipe";
import * as i3 from "./join.pipe";
import * as i4 from "./map.pipe";
import * as i5 from "./mask.pipe";
import * as i6 from "./prepend.pipe";
import * as i7 from "./sanitizeHtml.pipe";
import * as i8 from "./valueof.pipe";
import * as i9 from "./wrap.pipe";
import * as i10 from "./into.pipe";
import * as i11 from "./into.directive";
import * as i12 from "@angular/common";
export declare class CommonPipesModule {
    static forRoot(): ModuleWithProviders<any>;
    constructor(pool: ComponentPool);
    static ɵfac: i0.ɵɵFactoryDeclaration<CommonPipesModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<CommonPipesModule, [typeof i1.AppendPipe, typeof i2.ConditionalPipe, typeof i3.JoinPipe, typeof i4.MapPipe, typeof i5.MaskPipe, typeof i6.PrependPipe, typeof i7.SanitizeHtmlPipe, typeof i8.ValueOfPipe, typeof i9.WrapPipe, typeof i10.InToPipe, typeof i11.IntoDirective], [typeof i12.CommonModule], [typeof i1.AppendPipe, typeof i2.ConditionalPipe, typeof i3.JoinPipe, typeof i4.MapPipe, typeof i5.MaskPipe, typeof i6.PrependPipe, typeof i7.SanitizeHtmlPipe, typeof i8.ValueOfPipe, typeof i9.WrapPipe, typeof i10.InToPipe, typeof i11.IntoDirective]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<CommonPipesModule>;
}
