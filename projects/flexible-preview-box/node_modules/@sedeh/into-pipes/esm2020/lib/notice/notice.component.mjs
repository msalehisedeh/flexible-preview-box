import { Component, EventEmitter, HostListener } from '@angular/core';
import * as i0 from "@angular/core";
export class NoticeComponent {
    constructor(el) {
        this.el = el;
        this.onIntoComponentChange = new EventEmitter();
        el.nativeElement.setAttribute('tabindex', '0');
    }
    keyup(event) {
        const code = event.which;
        event.stopPropagation();
        event.preventDefault();
        if (code === 13) {
            event.target.click();
        }
    }
    click() {
        this.onIntoComponentChange.emit({
            id: this.id,
            name: this.name,
            value: this.source,
            type: 'click',
            item: 'notice'
        });
    }
    transform(source, data, args) {
        this.message = args.length ? args[0] : undefined;
        this.source = source;
        this.el.nativeElement.setAttribute('title', this.message);
    }
}
NoticeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: NoticeComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
NoticeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: NoticeComponent, selector: "notice-component", host: { listeners: { "keyup": "keyup($event)", "click": "click()" } }, ngImport: i0, template: `
        <span class='fa fa-bell' aria-hidden='true'></span>
        <span class='notice' [textContent]="source"></span>
    `, isInline: true, styles: [":host{display:table;position:relative;float:left;cursor:pointer}:host .fa{font-size:1rem}:host:hover{color:red}:host:hover .fa{color:red}:host:hover .notice{background-color:#000}.notice{display:table;width:17px;height:15px;border-radius:50%;text-align:center;background-color:#379bffe6;float:right;font-size:.7rem;line-height:1rem;margin-left:-5px;z-index:2;color:#fff}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: NoticeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'notice-component', template: `
        <span class='fa fa-bell' aria-hidden='true'></span>
        <span class='notice' [textContent]="source"></span>
    `, styles: [":host{display:table;position:relative;float:left;cursor:pointer}:host .fa{font-size:1rem}:host:hover{color:red}:host:hover .fa{color:red}:host:hover .notice{background-color:#000}.notice{display:table;width:17px;height:15px;border-radius:50%;text-align:center;background-color:#379bffe6;float:right;font-size:.7rem;line-height:1rem;margin-left:-5px;z-index:2;color:#fff}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { keyup: [{
                type: HostListener,
                args: ['keyup', ['$event']]
            }], click: [{
                type: HostListener,
                args: ['click', []]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ludG8tcGlwZXMvc3JjL2xpYi9ub3RpY2Uvbm90aWNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBYyxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBeUJsRixNQUFNLE9BQU8sZUFBZTtJQVN4QixZQUFvQixFQUFjO1FBQWQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQUZsQywwQkFBcUIsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBR3ZDLEVBQUUsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBQyxHQUFHLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBR0QsS0FBSyxDQUFDLEtBQVU7UUFDWixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDO1FBQ3pCLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN4QixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7UUFFdkIsSUFBSSxJQUFJLEtBQUssRUFBRSxFQUFFO1lBQ2IsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUN4QjtJQUNMLENBQUM7SUFFRCxLQUFLO1FBQ0QsSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQztZQUM1QixFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUU7WUFDWCxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7WUFDZixLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU07WUFDbEIsSUFBSSxFQUFFLE9BQU87WUFDYixJQUFJLEVBQUUsUUFBUTtTQUNqQixDQUFDLENBQUE7SUFDTixDQUFDO0lBQ0QsU0FBUyxDQUFDLE1BQVcsRUFBRSxJQUFTLEVBQUUsSUFBVztRQUN6QyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ2pELElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzlELENBQUM7OzZHQXJDUSxlQUFlO2lHQUFmLGVBQWUsK0hBcEJkOzs7S0FHVDs0RkFpQlEsZUFBZTtrQkF0QjNCLFNBQVM7K0JBQ0ksa0JBQWtCLFlBQ2xCOzs7S0FHVDtpR0ErQkQsS0FBSztzQkFESixZQUFZO3VCQUFDLE9BQU8sRUFBQyxDQUFDLFFBQVEsQ0FBQztnQkFXaEMsS0FBSztzQkFESixZQUFZO3VCQUFDLE9BQU8sRUFBQyxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIEVsZW1lbnRSZWYsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQaXBlQ29tcG9uZW50IH0gZnJvbSAnLi4vY29tbW9uL3BpcGUuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdub3RpY2UtY29tcG9uZW50JyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICAgICAgPHNwYW4gY2xhc3M9J2ZhIGZhLWJlbGwnIGFyaWEtaGlkZGVuPSd0cnVlJz48L3NwYW4+XHJcbiAgICAgICAgPHNwYW4gY2xhc3M9J25vdGljZScgW3RleHRDb250ZW50XT1cInNvdXJjZVwiPjwvc3Bhbj5cclxuICAgIGAsXHJcbiAgICBzdHlsZXM6IFtcclxuICAgICAgICBgXHJcbiAgICAgICAgOmhvc3Qge2Rpc3BsYXk6IHRhYmxlO3Bvc2l0aW9uOiByZWxhdGl2ZTtmbG9hdDogbGVmdDtjdXJzb3I6cG9pbnRlcn1cclxuICAgICAgICA6aG9zdCAuZmF7Zm9udC1zaXplOiAxcmVtO31cclxuICAgICAgICA6aG9zdDpob3Zlcntjb2xvcjogcmVkO31cclxuICAgICAgICA6aG9zdDpob3ZlciAuZmF7Y29sb3I6IHJlZDt9XHJcbiAgICAgICAgOmhvc3Q6aG92ZXIgLm5vdGljZXtiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO31cclxuICAgICAgICAubm90aWNlIHtkaXNwbGF5OiB0YWJsZTt3aWR0aDogMTdweDtoZWlnaHQ6IDE1cHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTt0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTUsMTU1LDI1NSwwLjkpO1xyXG4gICAgICAgICAgICBmbG9hdDogcmlnaHQ7Zm9udC1zaXplOiAwLjdyZW07bGluZS1oZWlnaHQ6IDFyZW07XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtNXB4O3otaW5kZXg6IDI7Y29sb3I6ICNmZmY7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGBcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE5vdGljZUNvbXBvbmVudCBpbXBsZW1lbnRzIFBpcGVDb21wb25lbnQge1xyXG4gICAgc291cmNlITogc3RyaW5nO1xyXG5cdGlkITogc3RyaW5nO1xyXG4gICAgbmFtZSE6IHN0cmluZztcclxuICAgIG1lc3NhZ2UhOiBzdHJpbmc7XHJcbiAgICBjb3VudCE6IG51bWJlcjtcclxuICAgIGZsb2F0OiBhbnk7XHJcbiAgICBvbkludG9Db21wb25lbnRDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpe1xyXG4gICAgICAgIGVsLm5hdGl2ZUVsZW1lbnQuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsJzAnKTtcclxuICAgIH1cclxuXHJcbiAgICBASG9zdExpc3RlbmVyKCdrZXl1cCcsWyckZXZlbnQnXSlcclxuICAgIGtleXVwKGV2ZW50OiBhbnkpIHtcclxuICAgICAgICBjb25zdCBjb2RlID0gZXZlbnQud2hpY2g7XHJcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIFxyXG4gICAgICAgIGlmIChjb2RlID09PSAxMykge1xyXG4gICAgICAgICAgICBldmVudC50YXJnZXQuY2xpY2soKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBASG9zdExpc3RlbmVyKCdjbGljaycsW10pXHJcbiAgICBjbGljaygpIHtcclxuICAgICAgICB0aGlzLm9uSW50b0NvbXBvbmVudENoYW5nZS5lbWl0KHtcclxuICAgICAgICAgICAgaWQ6IHRoaXMuaWQsXHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcclxuICAgICAgICAgICAgdmFsdWU6IHRoaXMuc291cmNlLFxyXG4gICAgICAgICAgICB0eXBlOiAnY2xpY2snLFxyXG4gICAgICAgICAgICBpdGVtOiAnbm90aWNlJ1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICB0cmFuc2Zvcm0oc291cmNlOiBhbnksIGRhdGE6IGFueSwgYXJnczogYW55W10pIHtcclxuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBhcmdzLmxlbmd0aCA/IGFyZ3NbMF0gOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5zb3VyY2UgPSBzb3VyY2U7XHJcbiAgICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnNldEF0dHJpYnV0ZSgndGl0bGUnLCB0aGlzLm1lc3NhZ2UpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==